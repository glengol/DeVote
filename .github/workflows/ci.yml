name: CI

on:
  push:
    branches: [main]
env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
  IMAGE_NAME: devote
  TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Set up Docker Compose
      run: sudo apt-get update && sudo apt-get install -y docker-compose

    - name: Build and run containers
      run: docker-compose up -d --build

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Cypress
      run: npm install cypress

    - name: Run Cypress tests
      run: npx cypress run

    - name: Bump version and push tag
      id: tag 
      if: ${{ github.ref == 'refs/heads/main' }}
      uses: anothrNick/github-tag-action@1.67.0
      env:
        GITHUB_TOKEN: ${{ secrets.MY_ACCESS_TOKEN }}
        WITH_V: false
        INITIAL_VERSION: 1.0.0
        IMAGE_NAME: devote

    - name: Publish Docker Image to DockerHub
      if: success()
      run: |
        TAG=$(git describe --tags)
        echo $DOCKER_ACCESS_TOKEN | docker login -u $DOCKER_USERNAME --password-stdin
        docker build -t $IMAGE_NAME:$TAG .
        docker tag $IMAGE_NAME:$TAG glengold/$IMAGE_NAME:$TAG
        docker push glengold/$IMAGE_NAME:$TAG

    - name: Clean up
      run: docker-compose down

    - name: Send success notification to Slack
      if: success()
      uses: slackapi/slack-github-action@v1.23.0
      with:
        payload: |
          {
            "text": "✅ CI Pipeline succeeded for commit ${{ github.sha }}.\nCypress tests passed and Docker image ${{ env.IMAGE_NAME }}:${{ env.TAG }} has been pushed successfully."
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Send failure notification to Slack
      if: failure()
      uses: slackapi/slack-github-action@v1.23.0
      with:
        payload: |
          {
            "text": "❌ CI Pipeline failed for commit ${{ github.sha }}."
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
